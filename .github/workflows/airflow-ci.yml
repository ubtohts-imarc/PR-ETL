name: CI - Apache Airflow

on:
  push:
    branches:
      - main

env:
  IMAGE_VERSION: ${{ github.sha }}

jobs:
  ci-test:
    name: CI Test - Airflow Health Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PUSH_TOKEN }}

      - name: Show Docker Compose Version
        run: docker compose version

      - name: Create .env file
        run: |
          cat <<EOF > .env
          AIRFLOW_UID=${{ secrets.AIRFLOW_UID }}
          AIRFLOW_USERNAME=${{ secrets.AIRFLOW_USERNAME }}
          AIRFLOW_PASSWORD=${{ secrets.AIRFLOW_PASSWORD }}
          AIRFLOW_FIRSTNAME=${{ secrets.AIRFLOW_FIRSTNAME }}
          AIRFLOW_LASTNAME=${{ secrets.AIRFLOW_LASTNAME }}
          AIRFLOW_EMAIL=${{ secrets.AIRFLOW_EMAIL }}
          PR_DATABASE_URL=${{ secrets.PR_DATABASE_URL }}
          AIRFLOW_DATABASE_URL=${{ secrets.AIRFLOW_DATABASE_URL }}
          EOF

      - name: Build and Start Airflow Stack
        run: docker compose up -d --build

      - name: Wait for Airflow Webserver to be Healthy
        run: |
          echo "Waiting for Airflow webserver to be healthy..."
          for i in {1..30}; do
            status=$(docker inspect --format='{{json .State.Health.Status}}' airflow_web || echo "null")
            if [ "$status" == "\"healthy\"" ]; then
              echo "Airflow webserver is healthy!"
              break
            fi
            echo "Waiting... ($i)"
            sleep 10
          done

      - name: List Airflow DAGs to verify installation
        run: docker exec airflow_web airflow dags list

      - name: Shutdown and Cleanup
        if: always()
        run: docker compose down --volumes --remove-orphans


  ci-publish:
    name: CI Publish - Build & Push Images
    runs-on: ubuntu-latest
    needs: ci-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PUSH_TOKEN }}

      - name: Build and Push airflow image (Dockerfile.etl)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.etl
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/airflow-image:${{ env.IMAGE_VERSION }}
            ghcr.io/${{ github.repository_owner }}/airflow-image:latest

      - name: Build and Push fastapi image (Dockerfile.api)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.api
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/fastapi-image:${{ env.IMAGE_VERSION }}
            ghcr.io/${{ github.repository_owner }}/fastapi-image:latest
